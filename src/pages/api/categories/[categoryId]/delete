// //src/pages/api/categories.ts
// import { NextApiRequest, NextApiResponse } from "next";
// // import { getCategories } from "../../utils/categories";
// // import Category from "../../models/category";
// import dotenv from "dotenv";
// import {
//   connectDb,
//   closeDbConnection,
//   getCategoryModel,
//   getQuestionModel,
// } from "@/mongoDb";

// export default async function handler(
//   req: NextApiRequest,
//   res: NextApiResponse
// ) {
//   if (req.method === "GET") {
//     try {
//       await fetchCategories(req, res);
//     } catch (error) {
//       console.error("Error fetching categories:", error);
//       res.status(500).json({
//         errorMsg: "Error fetching categories",
//         error: error.message ?? error,
//       });
//     }
//   } else if (req.method === "POST") {
//     const { name, description } = req.body;

//     try {
//       const newCategory = await createCategory(name, description);
//       res.status(200).json({ newCategory });
//     } catch (error) {
//       console.error("Error creating category:", error);
//       res.status(500).json({
//         errorMsg: "Error creating category",
//         error: error.message ?? error,
//       });
//     }
//   } else if (req.method === "PUT") {
//     if (!req.body) {
//       res.status(400).json({ error: "Invalid request body" });
//       return;
//     }

//     try {
//       const updatedCategory = await updateCategory(req.body);
//       res.status(200).json(updatedCategory);
//     } catch (error) {
//       console.error("Error updating category:", error);
//       res.status(500).json({
//         errorMsg: "Error updating category",
//         error: error.message ?? error,
//       });
//     }
//   } else if (req.method === "DELETE") {
//     const { data } = req.body;

//     try {
//       await deleteCategory(data);
//       res.status(200).json({ data });
//     } catch (error) {
//       console.error("Error deleting category:", error);
//       res.status(500).json({
//         errorMsg: "Error deleting category",
//         error: error.message ?? error,
//       });
//     }
//   } else {
//     res.status(405).json({ error: "Method not allowed" });
//   }
// }

// export async function deleteCategory(categoryId: string): Promise<void> {
//   await connectDb();
//   const Question = getQuestionModel();
//   const Category = getCategoryModel();

//   try {
//     const category = await Category.findByIdAndDelete(categoryId);
//     if (!category) {
//       console.error("Category not found:", categoryId);
//       return;
//     }
//     // Remove references to the deleted category from the questions
//     await Question.updateMany(
//       { category: categoryId },
//       { $unset: { category: "" } }
//     );
//   } catch (error) {
//     console.error("Error deleting category:", error);
//   }
// }
